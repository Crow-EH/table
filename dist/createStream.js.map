{"version":3,"sources":["createStream.js"],"names":[],"mappings":"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","file":"createStream.js","sourcesContent":["import makeStreamConfig from './makeStreamConfig';\nimport drawRow from './drawRow';\nimport {\n    drawBorderBottom,\n    drawBorderJoin,\n    drawBorderTop\n} from './drawBorder';\nimport _ from 'lodash';\n\nimport stringifyTableData from './stringifyTableData';\nimport truncateTableData from './truncateTableData';\nimport mapDataUsingRowHeightIndex from './mapDataUsingRowHeightIndex';\nimport alignTableData from './alignTableData';\nimport padTableData from './padTableData';\nimport calculateRowHeightIndex from './calculateRowHeightIndex';\n\nlet create,\n    append,\n    calculateColumnWidthIndex,\n    prepareData;\n\n/**\n * @param {string[]} row\n * @param {number[]} columnWidthIndex\n * @param {Object} config\n * @returns {undefined}\n */\ncreate = (row, columnWidthIndex, config) => {\n    let output,\n        rows,\n        body;\n\n    rows = prepareData([row], config);\n\n    body = _.map(rows, (row) => {\n        return drawRow(row, config.border);\n    }).join(\"\\n\");\n\n    output = '';\n    output += drawBorderTop(columnWidthIndex, config.border);\n    output += body;\n    output += drawBorderBottom(columnWidthIndex, config.border);\n\n    output = _.trimRight(output);\n\n    process.stdout.write(output);\n};\n\n/**\n * @param {string[]} row\n * @param {number[]} columnWidthIndex\n * @param {Object} config\n * @returns {undefined}\n */\nappend = (row, columnWidthIndex, config) => {\n    let output,\n        rows,\n        body;\n\n    rows = prepareData([row], config);\n\n    body = _.map(rows, (row) => {\n        return drawRow(row, config.border);\n    }).join(\"\\n\");\n\n    output = \"\\r\\x1b[K\";\n    output += drawBorderJoin(columnWidthIndex, config.border);\n    output += body;\n    output += drawBorderBottom(columnWidthIndex, config.border);\n\n    output = _.trimRight(output);\n\n    process.stdout.write(output);\n};\n\n/**\n * @param {string[][]} data\n * @param {Object} config\n * @returns {string[][]}\n */\nprepareData = (data, config) => {\n    let rows,\n        rowHeightIndex;\n\n    rows = stringifyTableData(data);\n\n    rows = truncateTableData(data, config);\n\n    rowHeightIndex = calculateRowHeightIndex(rows, config);\n\n    rows = mapDataUsingRowHeightIndex(rows, rowHeightIndex, config);\n    rows = alignTableData(rows, config);\n    rows = padTableData(rows, config);\n\n    return rows;\n};\n\n/**\n * @param {Object} userConfig\n * @return {Object}\n */\nexport default (userConfig = {}) => {\n    let config,\n        columnWidthIndex,\n        empty;\n\n    config = makeStreamConfig(userConfig);\n\n    columnWidthIndex = _.mapValues(config.columns, (column) => {\n        return column.width + column.paddingLeft + column.paddingRight;\n    });\n\n    empty = true;\n\n    return {\n        /**\n         * @param {string[]}\n         * @returns {undefined}\n         */\n        write: (row) => {\n            if (row.length !== config.columnCount) {\n                throw new Error(`Row cell count does not match the config.columnCount.`);\n            }\n\n            if (empty) {\n                empty = false;\n\n                return create(row, columnWidthIndex, config);\n            } else {\n                return append(row, columnWidthIndex, config);\n            }\n        }\n    };\n};\n"],"sourceRoot":"/source/"}