{"version":3,"sources":["mapDataUsingRowHeightIndex.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;2BACwB,eAAe;;;;;;;;;;;;;qBAQxB,UAAC,YAAY,EAAE,cAAc,EAAE,MAAM,EAAK;AACrD,QAAI,UAAU,YAAA;QACV,UAAU,YAAA,CAAC;;AAEf,cAAU,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;;;;AAIpC,cAAU,GAAG,sCAAM,YAAY,EAAE,UAAC,KAAK,EAAE,MAAM,EAAK;AAChD,YAAI,SAAS,YAAA,CAAC;;AAEd,iBAAS,GAAG,sCAAM,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,YAAM;AACnD,mBAAO,kCAAO,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC;SACxC,CAAC,CAAC;;;;;;;;AAQH,kDAAU,KAAK,EAAE,UAAC,KAAK,EAAE,MAAM,EAAK;AAChC,gBAAI,YAAY,YAAA,CAAC;;AAEjB,wBAAY,GAAG,8BAAY,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;;AAEhE,sDAAU,YAAY,EAAE,UAAC,IAAI,EAAE,MAAM,EAAK;AACtC,yBAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;aACpC,CAAC,CAAC;SACN,CAAC,CAAC;;AAEH,eAAO,SAAS,CAAC;KACpB,CAAC,CAAC;;AAEH,WAAO,qCAAU,UAAU,CAAC,CAAC;CAChC","file":"mapDataUsingRowHeightIndex.js","sourcesContent":["import _ from 'lodash';\nimport chunkString from './chunkString';\n\n/**\n * @param {Array} unmappedRows\n * @param {Number[]} rowHeightIndex\n * @param {Object} config\n * @return {Array}\n */\nexport default (unmappedRows, rowHeightIndex, config) => {\n    let tableWidth,\n        mappedRows;\n\n    tableWidth = unmappedRows[0].length;\n\n    // console.log(`unmappedRows`, unmappedRows, `rowHeightIndex`, rowHeightIndex, `config`, config, `tableWidth`, tableWidth);\n\n    mappedRows = _.map(unmappedRows, (cells, index0) => {\n        let rowHeight;\n\n        rowHeight = _.map(Array(rowHeightIndex[index0]), () => {\n            return _.fill(Array(tableWidth), '');\n        });\n\n        // console.log(`rowHeight`, rowHeight);\n\n        // rowHeight\n        //     [{row index within rowSaw; index2}]\n        //     [{cell index within a virtual row; index1}]\n\n        _.forEach(cells, (value, index1) => {\n            let chunkedValue;\n\n            chunkedValue = chunkString(value, config.columns[index1].width);\n\n            _.forEach(chunkedValue, (part, index2) => {\n                rowHeight[index2][index1] = part;\n            });\n        });\n\n        return rowHeight;\n    });\n\n    return _.flatten(mappedRows);\n};\n"],"sourceRoot":"/source/"}