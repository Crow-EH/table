{"version":3,"sources":["chunkString.js"],"names":[],"mappings":";;;;;;;;yBAAkB,YAAY;;;;2BACN,cAAc;;;;;;;;;;;;qBASvB,UAAC,OAAO,EAAE,IAAI,EAAK;AAC9B,QAAI,MAAM,YAAA;QACN,YAAY,YAAA,CAAC;;AAEjB,gBAAY,GAAG,OAAO,CAAC;;AAEvB,UAAM,GAAG,EAAE,CAAC;;AAEZ,OAAG;AACC,cAAM,CAAC,IAAI,CAAC,4BAAM,YAAY,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;AAE1C,oBAAY,GAAG,4BAAM,YAAY,EAAE,IAAI,CAAC,CAAC;KAC5C,QAAQ,8BAAY,YAAY,CAAC,EAAE;;AAEpC,WAAO,MAAM,CAAC;CACjB","file":"chunkString.js","sourcesContent":["import slice from 'ansi-slice';\nimport stringWidth from 'string-width';\n\n/**\n * Creates an array of strings split into groups the length of size.\n * This function works with strings that contain ASCII characters.\n *\n * @param {string} subject\n * @param {number} size\n */\nexport default (subject, size) => {\n    let chunks,\n        subjectSlice;\n\n    subjectSlice = subject;\n\n    chunks = [];\n\n    do {\n        chunks.push(slice(subjectSlice, 0, size));\n\n        subjectSlice = slice(subjectSlice, size);\n    } while (stringWidth(subjectSlice));\n\n    return chunks;\n};\n"],"sourceRoot":"/source/"}