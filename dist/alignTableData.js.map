{"version":3,"sources":["alignTableData.js"],"names":[],"mappings":";;;;;;;;;;2BACwB,eAAe;;;;2BACf,cAAc;;;;;;;;;;;;qBAOvB,UAAC,IAAI,EAAE,MAAM,EAAK;AAC7B,WAAO,sCAAM,IAAI,EAAE,UAAC,KAAK,EAAE,MAAM,EAAK;AAClC,eAAO,sCAAM,KAAK,EAAE,UAAC,KAAK,EAAE,MAAM,EAAK;AACnC,gBAAI,MAAM,YAAA,CAAC;;AAEX,kBAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;AAE/B,gBAAI,8BAAY,KAAK,CAAC,KAAK,MAAM,CAAC,KAAK,EAAE;AACrC,uBAAO,KAAK,CAAC;aAChB,MAAM;AACH,uBAAO,8BAAY,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;aAC7D;SACJ,CAAC,CAAC;KACN,CAAC,CAAC;CACN","file":"alignTableData.js","sourcesContent":["import _ from 'lodash';\nimport alignString from './alignString';\nimport stringWidth from 'string-width';\n\n/**\n * @param {table~row[]} rows\n * @param {Object} config\n * @return {table~row[]}\n */\nexport default (rows, config) => {\n    return _.map(rows, (cells, index0) => {\n        return _.map(cells, (value, index1) => {\n            let column;\n\n            column = config.column[index1];\n\n            if (stringWidth(value) === column.width) {\n                return value;\n            } else {\n                return alignString(value, column.width, column.alignment);\n            }\n        });\n    });\n};\n"],"sourceRoot":"/source/"}